(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{555:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍"}},[s._v("#")]),s._v(" 1.介绍")]),s._v(" "),t("p",[s._v("scan属于Redis key部分的命令，用于替代keys在大数据量情况下的使用。\nkeys命令的时间复杂度为O(n)，在大数据量的情况下必定会卡顿，所以就只能选择scan。")]),s._v(" "),t("h2",{attrs:{id:"_2-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令"}},[s._v("#")]),s._v(" 2.命令")]),s._v(" "),t("blockquote",[t("p",[s._v("命令参数: SCAN cursor MATCH [pattern] COUNT [count]")])]),s._v(" "),t("blockquote",[t("p",[s._v("命令实例: SCAN 0 MATCH * COUNT 100")])]),s._v(" "),t("ul",[t("li",[s._v("cursor是redis提供的下一次查询起始位置，第一次为0，最后一次也是0，实现闭环。")]),s._v(" "),t("li",[s._v("pattern与keys使用方式一致。")]),s._v(" "),t("li",[s._v("count则是每一次的遍历数量。")])]),s._v(" "),t("p",[s._v("SCAN是分次进行，因为中途会有rehash的可能，所以遍历途中会有查询重复的问题。")]),s._v(" "),t("h2",{attrs:{id:"_3-分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-分析"}},[s._v("#")]),s._v(" 3.分析")]),s._v(" "),t("p",[s._v("redis中key在存储时会通过hash取模来确定存储位置，并在元素过多时进行rehash。\n由于SCAN命令会分多次执行，渐进式rehash也是分多次执行，两者交叉执行时如果不进行特殊处理，查询必然会重复或者遗漏数据。")]),s._v(" "),t("p",[s._v("在使用scan命令时，使用了reverse binary iteration（位反转算法）实现避免了查询遗漏。\n再加上哈希表可能有些位置没有数据，所以每次获得的游标并不固定，查询时游标并不会顺序推进。\n如果dbsize = 4，cursor参数可能是这样的：")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("10进制 ==>   0     ->      2      ->     1     ->      3     ->      0\n2进制  ==>  00     ->     10      ->    01     ->     11     ->     00\n扩容   ==> 000 -> 100 -> 010 -> 110 -> 001 -> 101 -> 011 -> 111 -> 000\n00 ==> [000, 100]，取模相等的桶会相邻，而不会分散，即原桶里所有数据读取完了才会读取下一个桶，后面的桶也一定没有遍历过。\n\n缩容和扩容类似，只不过会发生重复遍历。[000, 100] ==> 00，如果000已遍历而100没遍历，缩容后还是会遍历。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("count参数与我们获取的key的数量会出现不一致，因为count指的是桶（槽）的数量。")])])}),[],!1,null,null,null);t.default=n.exports}}]);