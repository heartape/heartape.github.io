(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{527:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql"}},[t._v("#")]),t._v(" 1.mysql")]),t._v(" "),s("h3",{attrs:{id:"_1-索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-索引"}},[t._v("#")]),t._v(" 1.索引")]),t._v(" "),s("h3",{attrs:{id:"_2-事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-事务"}},[t._v("#")]),t._v(" 2.事务")]),t._v(" "),s("p",[t._v("事务的特点:")]),t._v(" "),s("ul",[s("li",[t._v("原子性(Atomicity)")]),t._v(" "),s("li",[t._v("一致性(Consistency)")]),t._v(" "),s("li",[t._v("隔离型(Isolation)")]),t._v(" "),s("li",[t._v("持久性(Durability)")])]),t._v(" "),s("h4",{attrs:{id:"redo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redo-log"}},[t._v("#")]),t._v(" redo log")]),t._v(" "),s("p",[t._v("mysql为了减少硬盘IO提升性能，引入了Boffer Pool(缓冲池)。\n查询一条记录，先从Buffer Pool中找，没有命中会从硬盘把一页的数据加载出来，放入到Buffer Pool中。\n修改也是会先存到Boffer Pool里头。\n然后使用后台线程去做缓冲池和磁盘之间的同步。\n此时，便需要使用redo log来记录这部分尚未写入数据，防止数据丢失。")]),t._v(" "),s("p",[t._v("redo log叫做重做日志，是用来实现事务的持久性。\n该日志文件由两部分组成: 重做redo log buffer（日志缓冲）以及redo log（重做日志文件），前者是在内存中，后者在磁盘中。")]),t._v(" "),s("p",[t._v("redo log有以下特性:")]),t._v(" "),s("ul",[s("li",[t._v("顺序存储，写入性能更好。")]),t._v(" "),s("li",[t._v("只要事务一提交，便将redo log buffer刷盘到redo log，保证事务的持久性(innodb_flush_log_at_trx_commit=1)。")])]),t._v(" "),s("h4",{attrs:{id:"undo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undo-log"}},[t._v("#")]),t._v(" undo log")]),t._v(" "),s("p",[t._v("undo log叫做回滚日志，用于记录数据被修改前的信息。")]),t._v(" "),s("p",[t._v("undo log的作用:")]),t._v(" "),s("ul",[s("li",[t._v("如果事务回滚，就会将undo log中的数据恢复。")]),t._v(" "),s("li",[t._v("undo log保存了开启事务前的数据，可以作为mvcc旧版本快照的数据，以供快照读。")])]),t._v(" "),s("h4",{attrs:{id:"锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[t._v("#")]),t._v(" 锁")]),t._v(" "),s("p",[t._v("在事务中因为需要解决脏读、幻读等问题需要加锁，只会在事务结束时才会被释放。")]),t._v(" "),s("p",[t._v("锁信息查看")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" performance_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data_locks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("事务等待信息查看")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trx_id waiting_trx_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trx_mysql_thread_id waiting_thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trx_query waiting_query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trx_id blocking_trx_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trx_mysql_thread_id blocking_thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trx_query blocking_query \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" \n  performance_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data_lock_waits w \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" information_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innodb_trx b \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trx_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blocking_engine_transaction_id \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" information_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innodb_trx r \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trx_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("requesting_engine_transaction_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[t._v("按粒度分类:")]),t._v(" "),s("ul",[s("li",[t._v("全局锁: 全库逻辑备份（mysqldump），命令 "),s("code",[t._v("Flush tables with read lock (FTWRL)")]),t._v("，会导致业务停止，主从延迟。")]),t._v(" "),s("li",[t._v("表级锁:\n"),s("ul",[s("li",[t._v("lock: 命令 "),s("code",[t._v("lock tables t1 read, t2 write;")]),t._v(","),s("code",[t._v("unlock tables;")]),t._v("，其他连接不能write t1、read write t2，当前连接也只能read t1、read write t2")]),t._v(" "),s("li",[t._v("元数据锁(MDL): 不需要显式使用。增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。")])])]),t._v(" "),s("li",[t._v("行级锁: 粒度最低的锁。行锁通过锁索引（一定会锁主键索引）来加锁，因为每次都通过where查找索引给数据加锁性能太低，这也导致了没有索引的话会锁表。")])]),t._v(" "),s("p",[t._v("按属性分类:")]),t._v(" "),s("ul",[s("li",[t._v("共享锁: 当前事务可读写，当前事务外可读。"),s("code",[t._v("select * from t1 where id = 1 lock in share mode")])]),t._v(" "),s("li",[t._v("排它锁: 当前事务可读写，当前事务外不可读写。"),s("code",[t._v("select * from t1 where id = 1 for update")])])]),t._v(" "),s("p",[t._v("按算法分类:")]),t._v(" "),s("ul",[s("li",[t._v("间隙锁:")]),t._v(" "),s("li",[t._v("临键锁:")]),t._v(" "),s("li",[t._v("记录锁:")])]),t._v(" "),s("h5",{attrs:{id:"意向锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#意向锁"}},[t._v("#")]),t._v(" 意向锁")]),t._v(" "),s("p",[t._v("Intention locks are table-level locks that indicate which type of lock (shared or exclusive) a transaction requires later for a row in a table.\nA lock is granted to a requesting transaction if it is compatible with existing locks, but not if it conflicts with existing locks.\nA transaction waits until the conflicting existing lock is released.\nIf a lock request conflicts with an existing lock and cannot be granted because it would cause deadlock, an error occurs.")]),t._v(" "),s("p",[t._v("大致意思就是，意向锁是一种提前声明，声明了当前表有共享锁或排它锁，省去每次扫描。其他事务在不冲突的情况下可以获取锁。")]),t._v(" "),s("p",[t._v("分类:")]),t._v(" "),s("ul",[s("li",[t._v("意向共享锁: a transaction intends to set a shared lock on individual rows in a table.(IS)"),s("code",[t._v("SELECT ... FOR SHARE")]),t._v("。")]),t._v(" "),s("li",[t._v("意向排它锁: a transaction intends to set an exclusive lock on individual rows in a table.(IX)"),s("code",[t._v("SELECT ... FOR UPDATE")]),t._v("。")])]),t._v(" "),s("p",[t._v("协议:")]),t._v(" "),s("ul",[s("li",[t._v("意向共享锁: Before a transaction can acquire a shared lock on a row in a table, it must first acquire an lock or stronger on the table.")]),t._v(" "),s("li",[t._v("意向排它锁: Before a transaction can acquire an exclusive lock on a row in a table, it must first acquire an lock on the table.")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" book "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ENGINE_TRANSACTION_ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("OBJECT_SCHEMA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("OBJECT_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("INDEX_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOCK_TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOCK_MODE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOCK_STATUS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOCK_DATA "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" performance_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data_locks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("锁信息:\n+-----------------------+---------------+-------------+------------+-----------+---------------+-------------+-----------+\n| ENGINE_TRANSACTION_ID | OBJECT_SCHEMA | OBJECT_NAME | INDEX_NAME | LOCK_TYPE | LOCK_MODE     | LOCK_STATUS | LOCK_DATA |\n+-----------------------+---------------+-------------+------------+-----------+---------------+-------------+-----------+\n|                  2869 | test          | book        | NULL       | TABLE     | IX            | GRANTED     | NULL      |\n|                  2869 | test          | book        | PRIMARY    | RECORD    | X,REC_NOT_GAP | GRANTED     | 1         |\n|                  2869 | test          | book        | PRIMARY    | RECORD    | X,REC_NOT_GAP | GRANTED     | 2         |\n+-----------------------+---------------+-------------+------------+-----------+---------------+-------------+-----------+")]),t._v(" "),s("p",[t._v("可以看到IX锁并不用来锁住数据。下面是意向锁锁全表时的记录:")]),t._v(" "),s("p",[t._v("+-----------------------+---------------+-------------+------------+-----------+---------------+-------------+------------------------+\n| ENGINE_TRANSACTION_ID | OBJECT_SCHEMA | OBJECT_NAME | INDEX_NAME | LOCK_TYPE | LOCK_MODE     | LOCK_STATUS | LOCK_DATA              |\n+-----------------------+---------------+-------------+------------+-----------+---------------+-------------+------------------------+\n|                  2869 | test          | book        | NULL       | TABLE     | IX            | GRANTED     | NULL                   |\n|                  2869 | test          | book        | PRIMARY    | RECORD    | X,REC_NOT_GAP | GRANTED     | supremum pseudo-record |\n|                  2869 | test          | book        | PRIMARY    | RECORD    | X,REC_NOT_GAP | GRANTED     | 1                      |\n|                  2869 | test          | book        | PRIMARY    | RECORD    | X,REC_NOT_GAP | GRANTED     | 2                      |\n+-----------------------+---------------+-------------+------------+-----------+---------------+-------------+------------------------+")]),t._v(" "),s("p",[t._v("插入意图锁\nAn insert intention lock is a type of gap lock(间隙锁).\n官方文档将插入意图锁作为单独一种")]),t._v(" "),s("h4",{attrs:{id:"mvcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvcc"}},[t._v("#")]),t._v(" mvcc")]),t._v(" "),s("p",[t._v("MVCC (MultiVersion Concurrency Control) 叫做多版本并发控制。")]),t._v(" "),s("p",[t._v("InnoDB的 MVCC ，是通过在每行记录的后面保存两个隐藏的列来实现的。\n这两个列， 一个保存了行的创建版本号，一个保存了行的过期版本号。")]),t._v(" "),s("h4",{attrs:{id:"隔离级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隔离级别"}},[t._v("#")]),t._v(" 隔离级别")]),t._v(" "),s("ul",[s("li",[t._v("READ UNCOMMITED (读未提交): 不加锁，事物之间公开透明。脏读。")]),t._v(" "),s("li",[t._v("READ COMMITED (读已提交): 写加锁，读mvcc。因为在每次select时都会生成一个版本，所以会读取到其他事务已提交的数据，导致事务内读取前后不一致。不可重读、幻读。")]),t._v(" "),s("li",[t._v("REPEATABLE READ (可重复读): 写加锁，读mvcc。只会在最初select时生成一个版本，但是update, delete, insert等是当前读能操作select不到的数据。幻读。")]),t._v(" "),s("li",[t._v("SERIALIZABLE (串行化): 顺序读写。")])]),t._v(" "),s("h4",{attrs:{id:"提交方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交方式"}},[t._v("#")]),t._v(" 提交方式")]),t._v(" "),s("ul",[s("li",[t._v("显示提交（显式事务）: begin; 'sql'; commit/rollback。此时相当于autocommit=OFF。")]),t._v(" "),s("li",[t._v("隐式提交（隐式事务）: 在没有显式开启事务时，会为单个sql开启隐式事务。隐式提交会自动在sql语句后提交。需要autocommit=ON，否则需要手动commit。")])]),t._v(" "),s("p",[t._v("显示提交:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'牛x'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("隐式提交:"),s("br"),t._v("\n连接1")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" VARIABLES "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'autocommit'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" autocommit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OFF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'牛x'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("连接2会等待")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'牛xx'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);